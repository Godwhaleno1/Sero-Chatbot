import os
from google import genai

os.environ["GEMINI_API_KEY"] = "AIzaSyDmSMjaj7d1m_CnG41ceysp3dEYTbj5kNk"

client = genai.Client(api_key=os.environ["GEMINI_API_KEY"])

def load_private_knowledge(file_path: str = None) -> str:
    """
    ƒê·ªçc n·ªôi dung t√†i li·ªáu n·ªôi b·ªô (n·∫øu c√≥).
    N·∫øu kh√¥ng truy·ªÅn file_path, tr·∫£ v·ªÅ n·ªôi dung m·∫´u.
    """
    if file_path and os.path.exists(file_path):
        with open(file_path, "r", encoding="utf-8") as f:
            return f.read()
    # N·ªôi dung m·∫∑c ƒë·ªãnh n·∫øu kh√¥ng c√≥ file
    return """
    T√†i li·ªáu n·ªôi b·ªô:
    - Li·ªáu ph√°p CBT gi√∫p ng∆∞·ªùi b·ªã lo √¢u h·ªçc c√°ch thay ƒë·ªïi suy nghƒ© ti√™u c·ª±c.
    - Ng·ªß ƒë·ªß gi·∫•c (7-8 ti·∫øng) v√† t·∫≠p th·ªÉ d·ª•c 30 ph√∫t m·ªói ng√†y gi·∫£m stress hi·ªáu qu·∫£.
    - Kh√¥ng n√™n d√πng ch·∫•t k√≠ch th√≠ch khi ƒëang ƒëi·ªÅu tr·ªã tr·∫ßm c·∫£m.
    """

# üìò 1Ô∏è‚É£ H√†m ch√≠nh sinh ph·∫£n h·ªìi AI
def generate_ai_reply(prompt: str, context_file: str = None) -> str:
    """
    Sinh ph·∫£n h·ªìi t·ª´ Gemini Flash, k·∫øt h·ª£p system_instruction + context ri√™ng.
    """
    try:
        # N·∫°p d·ªØ li·ªáu (context injection)
        context = load_private_knowledge(context_file)

        # T·∫°o n·ªôi dung t·ªïng h·ª£p cho prompt
        full_prompt = f"""
        D·ª±a v√†o t√†i li·ªáu sau ƒë√¢y, h√£y tr·∫£ l·ªùi c√¢u h·ªèi c·ªßa ng∆∞·ªùi d√πng.

        --- T√†i li·ªáu ---
        {context}

        --- C√¢u h·ªèi ---
        {prompt}
        --- K·∫øt h·ª£p ---
        B·∫°n l√† chatbot t∆∞ v·∫•n s·ª©c kh·ªèe t√¢m l√Ω.
    Lu√¥n tr·∫£ l·ªùi nh·∫π nh√†ng, c√≥ c·∫£m x√∫c, v√† kh√≠ch l·ªá ng∆∞·ªùi d√πng.
    D√πng ti·∫øng Vi·ªát t·ª± nhi√™n, tr√°nh gi·ªçng m√°y m√≥c.
    Khi c√≥ th·ªÉ, h√£y g·ª£i √Ω th√™m ho·∫°t ƒë·ªông gi√∫p c·∫£i thi·ªán tinh th·∫ßn (v√≠ d·ª•: thi·ªÅn, th·ªÉ thao, vi·∫øt nh·∫≠t k√Ω...).
        """

        # G·ªçi Gemini Flash v·ªõi system instruction
        resp = client.models.generate_content(
            model="gemini-2.5-flash",
            contents=full_prompt,
        )

        # resp c√≥ th·ªÉ ch·ª©a nhi·ªÅu ph·∫ßn, nh∆∞ng text ch√≠nh n·∫±m ·ªü resp.text
        return resp.text.strip() if resp.text else "Xin l·ªói, t√¥i ch∆∞a th·ªÉ tr·∫£ l·ªùi c√¢u h·ªèi n√†y."
    except Exception as e:
        print("‚ùå L·ªói khi g·ªçi Gemini API:", e)
        return "Xin l·ªói, t√¥i g·∫∑p l·ªói khi k·∫øt n·ªëi t·ªõi m√¥ h√¨nh AI."
